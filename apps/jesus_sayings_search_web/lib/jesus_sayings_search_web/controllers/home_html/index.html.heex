<!DOCTYPE html>
<html lang="en" class="h-full">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="csrf-token" content={get_csrf_token()} />
    <title>Jesus</title>
    <link rel="icon" type="image/x-icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>üîç</text></svg>" />
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=Product+Sans:wght@400&display=swap" rel="stylesheet">
    <style>
      body { font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; }
      .google-logo { 
        font-family: 'Product Sans', 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
        font-weight: 400; 
        letter-spacing: -0.02em; 
      }
      
      /* Google-style button effects */
      .google-btn {
        background: #f8f9fa;
        border: 1px solid #f8f9fa;
        border-radius: 4px;
        color: #3c4043;
        font-family: inherit;
        font-size: 14px;
        margin: 11px 4px;
        padding: 0 16px;
        line-height: 27px;
        height: 36px;
        min-width: 54px;
        text-align: center;
        cursor: pointer;
        user-select: none;
        transition: box-shadow 0.3s ease, border-color 0.3s ease;
      }
      
      .google-btn:hover {
        box-shadow: 0 1px 1px rgba(0,0,0,.1);
        background-color: #f8f9fa;
        border: 1px solid #dadce0;
        color: #202124;
      }
      
      .google-btn:focus {
        border: 1px solid #4285f4;
        outline: none;
      }
      
      /* Search box styling */
      .search-box {
        background: #fff;
        border: 1px solid #dfe1e5;
        border-radius: 24px;
        color: #202124;
        font-family: inherit;
        font-size: 16px;
        padding: 0 8px 0 16px;
        line-height: 34px;
        height: 44px;
        width: 100%;
        outline: none;
        transition: box-shadow 0.3s ease, border-color 0.3s ease;
      }
      
      .search-box:hover {
        box-shadow: 0 2px 5px 1px rgba(64,60,67,.16);
        border-color: rgba(223,225,229,0);
      }
      
      .search-box:focus {
        box-shadow: 0 2px 5px 1px rgba(64,60,67,.16);
        border-color: rgba(223,225,229,0);
      }
      
      /* Logo animation */
      .logo-letter {
        display: inline-block;
        animation: logoFloat 6s ease-in-out infinite;
      }
      
      .logo-letter:nth-child(1) { animation-delay: 0s; }
      .logo-letter:nth-child(2) { animation-delay: 0.3s; }
      .logo-letter:nth-child(3) { animation-delay: 0.6s; }
      .logo-letter:nth-child(4) { animation-delay: 0.9s; }
      .logo-letter:nth-child(5) { animation-delay: 1.2s; }
      
      @keyframes logoFloat {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-5px); }
      }
      
      /* Search suggestions */
      .search-suggestions {
        background: white;
        border: 1px solid #d9d9d9;
        border-top: 0;
        max-height: 200px;
        overflow-y: auto;
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        z-index: 100;
        border-radius: 0 0 24px 24px;
        box-shadow: 0 2px 5px 1px rgba(64,60,67,.16);
      }
      
      .suggestion-item {
        padding: 8px 20px;
        cursor: pointer;
        font-size: 16px;
        display: flex;
        align-items: center;
      }
      
      .suggestion-item:hover, .suggestion-item.selected {
        background-color: #f8f9fa;
      }
      
      .suggestion-icon {
        margin-right: 16px;
        color: #9aa0a6;
      }
    </style>
  </head>
  <body class="h-full bg-white antialiased">
    <!-- Top navigation -->
    <div class="absolute top-0 right-0 p-4">
      <div class="flex items-center space-x-4 text-sm">
        <a href="#" class="text-gray-700 hover:underline">About</a>
        <a href="#" class="text-gray-700 hover:underline">Images</a>
        <div class="flex items-center space-x-2">
          <button class="p-2 rounded-full hover:bg-gray-100">
            <svg class="w-6 h-6 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
            </svg>
          </button>
        </div>
      </div>
    </div>

    <!-- Main content -->
    <div class="flex flex-col items-center justify-center min-h-screen">
      <!-- Logo -->
      <div class="mb-8">
        <h1 class="text-9xl google-logo cursor-default select-none">
          <span class="logo-letter text-blue-500">J</span><span class="logo-letter text-red-500">e</span><span class="logo-letter text-yellow-400">s</span><span class="logo-letter text-blue-500">u</span><span class="logo-letter text-green-500">s</span>
        </h1>
      </div>
      
      <!-- Search form -->
      <div class="w-full max-w-xl mb-8">
        <form action={~p"/sayings"} method="get" class="relative">
          <div class="relative group">
            <!-- Search input -->
            <input
              type="text"
              name="search"
              class="search-box"
              placeholder=""
              autocomplete="off"
              spellcheck="false"
              id="main-search"
            />
            
            <!-- Search icon -->
            <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
              <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
            </div>
            
            <!-- Voice search icon -->
            <div class="absolute inset-y-0 right-0 pr-4 flex items-center">
              <button type="button" class="p-1 rounded hover:bg-gray-100" title="Search by voice">
                <svg class="h-6 w-6 text-gray-400" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z"/>
                  <path d="M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z"/>
                </svg>
              </button>
            </div>
            
            <!-- Search suggestions container -->
            <div id="suggestions" class="search-suggestions hidden"></div>
          </div>
          
          <!-- Search buttons -->
          <div class="flex justify-center mt-8 space-x-3">
            <button type="submit" class="google-btn">Search</button>
            <button 
              type="button"
              onclick="document.getElementById('main-search').value = 'blessed'; this.form.submit();"
              class="google-btn"
            >
              I'm Feeling Blessed
            </button>
          </div>
        </form>
      </div>
      
      <!-- Stats -->
      <div class="text-center">
        <div class="text-sm text-gray-600">
          Search through 551 sayings of Jesus from the Gospels
        </div>
      </div>
    </div>
    
    <!-- Footer -->
    <footer class="absolute bottom-0 w-full">
      <div class="text-center py-4">
        <div class="text-xs text-gray-500">
          ¬© <span id="current-year"></span> PreachCode
        </div>
      </div>
    </footer>

    <!-- JavaScript for Google-like functionality -->
    <script>
      // Set current year dynamically
      document.getElementById('current-year').textContent = new Date().getFullYear();
      
      // Search suggestions
      const searchSuggestions = [
        'blessed', 'love your enemies', 'faith', 'prayer', 'kingdom of heaven', 'eternal life', 
        'forgive', 'peace', 'salvation', 'follow me', 'good shepherd', 'ask and receive',
        'light of the world', 'bread of life', 'way truth life', 'beatitudes', 'golden rule',
        'lord\'s prayer', 'prodigal son', 'good samaritan', 'mustard seed', 'great commission',
        'love one another', 'born again', 'come to me', 'seek first', 'do not worry',
        'resurrection', 'cross', 'fishers of men', 'salt of the earth', 'narrow gate'
      ];

      const searchInput = document.getElementById('main-search');
      const suggestionsContainer = document.getElementById('suggestions');
      let selectedIndex = -1;

      // Focus search on page load
      window.addEventListener('load', () => {
        searchInput.focus();
      });

      // Focus on search input with '/' key
      document.addEventListener('keydown', function(e) {
        if (e.key === '/' && !searchInput.matches(':focus')) {
          e.preventDefault();
          searchInput.focus();
        }
      });

      // Search suggestions
      searchInput.addEventListener('input', function() {
        const value = this.value.toLowerCase().trim();
        
        if (value.length === 0) {
          hideSuggestions();
          return;
        }

        const matches = searchSuggestions.filter(suggestion => 
          suggestion.toLowerCase().includes(value)
        ).slice(0, 8);

        if (matches.length > 0) {
          showSuggestions(matches, value);
        } else {
          hideSuggestions();
        }
      });

      function showSuggestions(suggestions, query) {
        suggestionsContainer.innerHTML = '';
        selectedIndex = -1;
        
        suggestions.forEach((suggestion, index) => {
          const div = document.createElement('div');
          div.className = 'suggestion-item';
          div.innerHTML = `
            <svg class="suggestion-icon w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
            <span>${suggestion}</span>
          `;
          
          div.addEventListener('click', () => {
            searchInput.value = suggestion;
            searchInput.form.submit();
          });
          
          div.addEventListener('mouseenter', () => {
            clearSelection();
            div.classList.add('selected');
            selectedIndex = index;
          });
          
          suggestionsContainer.appendChild(div);
        });
        
        suggestionsContainer.classList.remove('hidden');
      }

      function hideSuggestions() {
        suggestionsContainer.classList.add('hidden');
        selectedIndex = -1;
      }

      function clearSelection() {
        const items = suggestionsContainer.querySelectorAll('.suggestion-item');
        items.forEach(item => item.classList.remove('selected'));
      }

      // Keyboard navigation
      searchInput.addEventListener('keydown', function(e) {
        const items = suggestionsContainer.querySelectorAll('.suggestion-item');
        
        if (e.key === 'ArrowDown') {
          e.preventDefault();
          if (items.length > 0) {
            clearSelection();
            selectedIndex = (selectedIndex + 1) % items.length;
            items[selectedIndex].classList.add('selected');
          }
        } else if (e.key === 'ArrowUp') {
          e.preventDefault();
          if (items.length > 0) {
            clearSelection();
            selectedIndex = selectedIndex <= 0 ? items.length - 1 : selectedIndex - 1;
            items[selectedIndex].classList.add('selected');
          }
        } else if (e.key === 'Enter') {
          if (selectedIndex >= 0 && items[selectedIndex]) {
            e.preventDefault();
            const selectedText = items[selectedIndex].querySelector('span').textContent;
            searchInput.value = selectedText;
            searchInput.form.submit();
          }
        } else if (e.key === 'Escape') {
          hideSuggestions();
        }
      });

      // Hide suggestions when clicking outside
      document.addEventListener('click', function(e) {
        if (!searchInput.contains(e.target) && !suggestionsContainer.contains(e.target)) {
          hideSuggestions();
        }
      });

      // Add some Google Easter eggs
      searchInput.addEventListener('focus', function() {
        if (Math.random() < 0.1) { // 10% chance
          this.placeholder = "What did Jesus say about...";
        }
      });

      searchInput.addEventListener('blur', function() {
        this.placeholder = "";
      });
    </script>
  </body>
</html>